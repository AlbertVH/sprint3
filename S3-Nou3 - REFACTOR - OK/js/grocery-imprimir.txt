// Exercise 10
// Move this variable to a json file and load the data in this js

var products = [
    {
        id: 1,
        name: 'cooking oil',
        price: 10.5,
        type: 'grocery',
        offer: {
            number: 0.5,
            percent:0
        }
    },
    {
        id: 2,
        name: 'Pasta',
        price: 6.25,
        type: 'grocery',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 3,
        name: 'Instant cupcake mixture',
        price: 5,
        type: 'grocery',
        offer: {
            number: 0,
            percent:0.33
        }
    },
    {
        id: 4,
        name: 'All-in-one',
        price: 260,
        type: 'beauty',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 5,
        name: 'Zero Make-up Kit',
        price: 20.5,
        type: 'beauty',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 6,
        name: 'Lip Tints',
        price: 12.75,
        type: 'beauty',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 7,
        name: 'Lawn Dress',
        price: 15,
        type: 'clothes',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 8,
        name: 'Lawn-Chiffon Combo',
        price: 19.99,
        type: 'clothes',
        offer: {
            number: 0,
            percent:0
        }
    },
    {
        id: 9,
        name: 'Toddler Frock',
        price: 9.99,
        type: 'clothes',
        offer: {
            number: 0,
            percent:0
        }
    }
]
var cartList = [];
var cart = [];
var subtotal = {
    grocery: {
        value: 0, 
        discount: 0
    },
    beauty: {
        value: 0, 
        discount: 0
    },
    clothes: {
        value: 0, 
        discount: 0
    },
};
var total = 0;

// Exercise 1
function buy(id) {
    for (let i=0; i<products.length; i++){
        const product = products[i];
        if (id==product.id){
            cartList.push(product);
        }
    }   
    console.log(cartList);
}

// Exercise 2
function cleanCart() {
    cartList = [];
    cart = [];
}

// Exercise 3
function calculateSubtotals() {
    
    for (let i=0; i < cartList.length; i++){
        const product = cartList[i];
            const type= product.type;
            const price= product.price;
        
        if (type=="grocery"){
            subtotal.grocery.value= subtotal.grocery.value + price; // +=price
        }
        if (type=="beauty"){
            subtotal.beauty.value= subtotal.grocery.value + price; // +=price
        }
        if (type=="clothes"){
            subtotal.clothes.value= subtotal.grocery.value + price; // +=price
        }
    }
    console.log(subtotal);
    // 1. Create a for loop on the "cartList" array 
    // 2. Implement inside the loop an if...else or switch...case to add the quantities of each type of product, obtaining the subtotals: subtotalGrocery, subtotalBeauty and subtotalClothes
}

// Exercise 4
function calculateTotal() {
    // Calculate total price of the cart either using the "cartList" array
    // NO fer-ho així: var total = subtotal.grocery.value + subtotal.beauty.value + subtotal.clothes.value.

    ///////  --- Bucle FOR...IN ---   ////////
    for (let categoria in subtotal) {
        let totalProvisional= subtotal[categoria].value;
            total= total + totalProvisional;
      }
    console.log(total);
}

// Exercise 5
function generateCart() {
     
    for (let i=0; i<cartList.length;i++){ //Recorre toda la lista de la compra
        const product=cartList[i]; 
        let found=false;
            for (let j=0; j<cart.length; j++){ //Recorre el CartList
                var cartProduct=cart[j];
                if (product.id===cartProduct.id){ //Si ya encuentra el id, le añade uno
                    found=true;
                    cartProduct.quantity++;
                    cartProduct.subtotal = cartProduct.quantity * cartProduct.price;
                } 
            }
        if (found==false){ //Si no lo encuentra, la cantidad se queda en uno
            var cartProduct={ //Generamos objeto con los datos del producto
                id: product.id,
                name: product.name,
                price: product.price,
                type: product.type,
                quantity: 1,
                subtotal: product.price,
                offer: product.offer,
                subtotalWithDiscount: 0
                }
                
        cart.push(cartProduct); //Añadimos el producto con sus datos en el Cart
        }
    }
    console.log(cart);
}


// Exercise 6
function applyPromotionsCart() { 
    //*** VERSION PRIMITIVA ***/:
    /*for (i=0; i<cart.length; i++){ // Recorrer Cart 
        const cartProd= cart[i];

        if (cartProd.id==1 && cartProd.quantity>=3){
            cart[i].discount=0.5;
            cartProd.subtotalWithDiscount= (cartProd.subtotal)-((cartProd.discount)*cartProd.quantity);

            //Mostrar precio con y sin descuento:
            console.log("Cooking oil: " + cartProd.subtotal + " eur-. Con descuento: " + cartProd.subtotalWithDiscount);
        } 
        else if (cartProd.id==3 && cartProd.quantity>=10){
            cartProd.discount=(cartProd.subtotal/3);
            cartProd.subtotalWithDiscount= (cartProd.subtotal)-(cartProd.discount);

            //Mostrar precio con y sin descuento:
            console.log("Pastís: " + cartProd.subtotal + " eur-. Con descuento: "+ cartProd.subtotalWithDiscount);
        }
    } */

    //*** VERSION OK ***/:
    for (i=0; i<cart.length; i++){ // Recorrer Cart 
        const cartProd= cart[i];

        if (cartProd.id==1 && cartProd.quantity>=3){
            cartProd.subtotalWithDiscount= (cartProd.subtotal)-((cartProd.offer.number)*cartProd.quantity);

            //Mostrar precio con y sin descuento:
            console.log("Cooking oil: " + cartProd.subtotal + " eur-. Con descuento: " + cartProd.subtotalWithDiscount);
        } 

        else if (cartProd.id==3 && cartProd.quantity>=10){
            cartProd.subtotalWithDiscount= (cartProd.subtotal)-((cartProd.subtotal)*(cartProd.offer.percent));

            //Mostrar precio con y sin descuento:
            console.log("Pastís: " + cartProd.subtotal + " eur-. Con descuento: " + cartProd.subtotalWithDiscount);
        }
    }
}

// Exercise 7
function addToCart(id) {
    for (let i=0; i<products.length; i++){   // probar *for...of* //

        for (let j=0; j<cart.length; j++){ //Recorre el CartList

                if (products[i].id===cart.products[i].id) { //Suma 1
                    cartProduct.quantity++;
                    cartProduct.subtotal = cartProduct.quantity * cartProduct.price;
                }
                else{ //Deja 1
                    var cartProduct={ //Generamos objeto con los datos del producto
                        id: products[i].id,
                        name: products[i].name,
                        price: products[i].price,
                        type: products[i].type,
                        quantity: 1,
                        subtotal: products[i].price,
                        offer: products[i].offer,
                        subtotalWithDiscount: 0
                        }
                }
                    
            cart.push(cartProduct); //Añadimos el producto con sus datos en el Cart
            }
                
        } 
    }

    // Refactor previous code in order to simplify it 
    // 1. Loop for to the array products to get the item to add to cart
    // 2. Add found product to the cart array or update its quantity in case it has been added previously.

    // Podem eliminar ***buy()*** i ***generateCart()***, per a generar el carret en una única funció ***addToCart()***.

    // hauràs de modificar també ***calculateSubtotals***, 

// Exercise 8
function removeFromCart(id) {
    // 1. Loop for to the array products to get the item to add to cart
    // 2. Add found product to the cartList array
}

// Exercise 9
function printCart() {
    // Fill the shopping cart modal manipulating the shopping cart dom
}

// Para boton testeo
function testAll() {
    calculateSubtotals();
    calculateTotal();
    applyPromotionsCart()
}